digraph {
graph [overlap=false]
subgraph cluster_Plack_Test_MockHTTP {
	label="Plack::Test::MockHTTP";
	"Plack::Test::MockHTTP::__ANON__[Plack/Test/MockHTTP.pm:31]";
}
subgraph cluster_HTTP_Request {
	label="HTTP::Request";
	"HTTP::Request::uri";
}
subgraph cluster_utf8 {
	label="utf8";
	"utf8::downgrade";
}
subgraph cluster_HTTP_Message_PSGI {
	label="HTTP::Message::PSGI";
	"HTTP::Message::PSGI::req_to_psgi";
}
subgraph cluster_URI__generic {
	label="URI::_generic";
	"URI::_generic::_no_scheme_ok";
}
subgraph cluster_URI__server {
	label="URI::_server";
	"URI::_server::_uric_escape";
	"URI::_server::canonical";
}
subgraph cluster_Catalyst_DispatchType_Path {
	label="Catalyst::DispatchType::Path";
	"Catalyst::DispatchType::Path::register_path";
	"Catalyst::DispatchType::Path::CORE:subst";
}
subgraph cluster_main {
	label="main";
	"main::BEGIN@7";
}
subgraph cluster_URI_Escape {
	label="URI::Escape";
	"URI::Escape::BEGIN@145";
	"URI::Escape::BEGIN@2";
	"URI::Escape::CORE:qr";
}
subgraph cluster_URI {
	label="URI";
	"URI::_scheme";
	"URI::clone";
	"URI::BEGIN@7";
	"URI::implementor";
	"URI::BEGIN@128";
	"URI::CORE:match";
	"URI::BEGIN@13";
	"URI::__ANON__[URI.pm:24]";
	"URI::scheme";
	"URI::_init_implementor";
	"URI::BEGIN@24";
	"URI::_init";
	"URI::BEGIN@4";
	"URI::canonical";
	"URI::CORE:regcomp";
	"URI::BEGIN@21";
	"URI::new";
	"URI::_uric_escape";
	"URI::BEGIN@22";
	"URI::BEGIN@3";
	"URI::CORE:subst";
}
subgraph cluster_overload {
	label="overload";
	"overload::import";
}
subgraph cluster_vars {
	label="vars";
	"vars::import";
}
subgraph cluster_strict {
	label="strict";
	"strict::unimport";
	"strict::import";
}
"URI::BEGIN@22" -> "URI::Escape::CORE:qr";
"main::BEGIN@7" -> "URI::BEGIN@3";
"URI::BEGIN@24" -> "overload::import";
"main::BEGIN@7" -> "URI::BEGIN@22";
"Catalyst::DispatchType::Path::register_path" -> "URI::canonical";
"URI::_server::canonical" -> "URI::canonical";
"HTTP::Request::uri" -> "URI::new";
"URI::_scheme" -> "URI::new";
"Catalyst::DispatchType::Path::register_path" -> "URI::new";
"main::BEGIN@7" -> "URI::BEGIN@4";
"URI::new" -> "URI::_init";
"URI::BEGIN@22" -> "URI::Escape::BEGIN@145";
"main::BEGIN@7" -> "URI::BEGIN@128";
"URI::BEGIN@3" -> "strict::import";
"URI::_server::_uric_escape" -> "URI::_uric_escape";
"URI::_init" -> "URI::_uric_escape";
"URI::new" -> "URI::CORE:regcomp";
"URI::_scheme" -> "URI::CORE:regcomp";
"URI::_uric_escape" -> "URI::CORE:regcomp";
"URI::_init" -> "URI::CORE:regcomp";
"URI::implementor" -> "URI::CORE:regcomp";
"URI::_init" -> "URI::_generic::_no_scheme_ok";
"URI::_scheme" -> "URI::CORE:subst";
"URI::_uric_escape" -> "URI::CORE:subst";
"URI::new" -> "URI::CORE:subst";
"URI::implementor" -> "URI::CORE:subst";
"main::BEGIN@7" -> "URI::BEGIN@24";
"Catalyst::DispatchType::Path::register_path" -> "URI::__ANON__[URI.pm:24]";
"Catalyst::DispatchType::Path::CORE:subst" -> "URI::__ANON__[URI.pm:24]";
"main::BEGIN@7" -> "URI::BEGIN@21";
"URI::BEGIN@128" -> "strict::unimport";
"URI::BEGIN@7" -> "vars::import";
"URI::BEGIN@13" -> "vars::import";
"URI::BEGIN@4" -> "vars::import";
"URI::new" -> "URI::implementor";
"URI::BEGIN@22" -> "URI::Escape::BEGIN@2";
"HTTP::Message::PSGI::req_to_psgi" -> "URI::clone";
"main::BEGIN@7" -> "URI::BEGIN@7";
"URI::canonical" -> "URI::_scheme";
"URI::scheme" -> "URI::_scheme";
"URI::_uric_escape" -> "utf8::downgrade";
"URI::_init" -> "URI::_server::_uric_escape";
"URI::canonical" -> "URI::CORE:match";
"URI::new" -> "URI::CORE:match";
"URI::_scheme" -> "URI::CORE:match";
"URI::_init" -> "URI::CORE:match";
"URI::implementor" -> "URI::CORE:match";
"URI::implementor" -> "URI::_init_implementor";
"HTTP::Message::PSGI::req_to_psgi" -> "URI::scheme";
"Plack::Test::MockHTTP::__ANON__[Plack/Test/MockHTTP.pm:31]" -> "URI::scheme";
"main::BEGIN@7" -> "URI::BEGIN@13";
}
